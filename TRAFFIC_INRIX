from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time

service = Service(ChromeDriverManager().install())

options = webdriver.ChromeOptions()
options.add_argument('--headless')  
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')

driver = webdriver.Chrome(service=service, options=options)

url = 'https://inrix.com/scorecard/#city-ranking-list' 
driver.get(url)

time.sleep(5)

try:
    consent_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.ID, 'onetrust-accept-btn-handler')) 
    )
    consent_button.click()
    print("Pop-up de consentimiento cerrado.")
except Exception as e:
    print("No se pudo cerrar el pop-up de consentimiento de cookies o no existe.")
    print(f"Error: {e}")

def extract_rankings():
    rankings = []
    rankings_elements = driver.find_elements(By.CSS_SELECTOR, 'div.ag-row')  
    for row in rankings_elements:
        rank = row.find_element(By.CLASS_NAME, 'ag-cell-value').text 
        city = row.find_elements(By.CLASS_NAME, 'ag-cell-value')[1].text 
        rankings.append((rank, city))
    return rankings

all_rankings = extract_rankings()
print("Ranking y ciudad extraídos de la primera página:")
for rank, city in all_rankings:
    print(f"{rank} {city}")

while True:
    try:
        next_button = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, 'div[data-ref="btNext"]'))
        )
        
        driver.execute_script("arguments[0].scrollIntoView();", next_button)
        time.sleep(1)  

        next_button.click()
        print("Botón 'Next Page' clicado.")

        time.sleep(5)

        rankings = extract_rankings()
        print("Ranking y ciudad extraídos de la nueva página:")
        for rank, city in rankings:
            print(f"{rank} {city}")

    except Exception as e:
        print("No se pudo hacer clic en el botón 'Next Page' o no hay más páginas.")
        print(f"Error: {e}")
        break

driver.quit()
